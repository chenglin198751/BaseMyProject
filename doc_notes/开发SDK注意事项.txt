
1、如果是游戏SDK，那么所有的R资源引用必须用getIdentifier（参看工具类getResUtils），否则如果使用者使用eclipse接入就会报R文件找不到的问题。

2、混淆配置很重要，流程如下：
    1、第一次编译：aar内置自定义混淆规则，apk不要配置自定义混淆规则，二者混淆开关都设置为开启。编译APK。然后取出各个aar。此时得到的aar就是按照自定义混淆规则混淆过的代码。
    2、在demo工程建立一个空的library，此library设置混淆关。把上面拿到的aar（如果是多个aar，需要拆开合并）放到空的library下，
    此时APK的混淆设置为开，其混淆规则设置为对外CP的混淆（注意，不是aar的自定义混淆，一定要是对外CP的），此时再编译apk，得到的apk就是模拟CP的真正demo apk 。

3、混淆结果的一级目录不能出现a.a,a.b这种路径。因为如果别的SDK也混淆了也会产生a.a,a.b这种路径，那么就会导致类冲突。
    所以需要保留固定包路径：
    -keeppackagenames com.devnn.*   一颗星表示保留com.devnn下的包名不被混淆，而子包下的包名和类名都会被混淆；
    -keeppackagenames com.devnn.**  两颗星表示保留com.devnn下的所有包名不被混淆，类都会被混淆。
    特别注意，使用-keeppackagenames时，必须保证指定的包名下，至少有一个类，否则不生效。